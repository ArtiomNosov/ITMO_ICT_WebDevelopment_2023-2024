{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u041d\u043e\u0441\u043e\u0432 \u0410\u0440\u0442\u0451\u043c, \u0433\u0440\u0443\u043f\u043f\u0430 K3444d \u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u21161-4. \u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043e\u0442\u0447\u0435\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 5-\u0433\u043e \u0441\u0435\u043c\u0435\u0441\u0442\u0440\u0430 2023-2024 \u0433\u043e\u0434\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f. \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c : \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0413\u043e\u0432\u043e\u0440\u043e\u0432.","title":"Home"},{"location":"#_1","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u21161-4. \u041d\u0430 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043e\u0442\u0447\u0435\u0442\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0445 \u0440\u0430\u0431\u043e\u0442 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 5-\u0433\u043e \u0441\u0435\u043c\u0435\u0441\u0442\u0440\u0430 2023-2024 \u0433\u043e\u0434\u0430 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f. \u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c : \u0410\u043d\u0442\u043e\u043d \u0418\u0433\u043e\u0440\u0435\u0432\u0438\u0447 \u0413\u043e\u0432\u043e\u0440\u043e\u0432.","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435"},{"location":"lab1/task1/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1 C\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 UDP s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u0445\u043e\u0441\u0442\u0443 (\u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0443) \u0438 \u043f\u043e\u0440\u0442\u0443 9090 s.bind((socket.gethostname(), 9090)) # \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 while True: # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (msg) \u0438 \u0430\u0434\u0440\u0435\u0441 (address) \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f msg, address = s.recvfrom(2148) # \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0438 \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 print(msg.decode()) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043c \u043e\u0442\u0432\u0435\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 s.sendto(bytes('Hello, client!', 'utf-8'), address) \u041d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 9090, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0417\u0430\u0442\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c import socket # \u0421\u043e\u0437\u0434\u0430\u0451\u043c User Datagram Protocol \u0441\u043e\u043a\u0435\u0442 s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 \u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u0435, \u043f\u043e\u0440\u0442\u0443 9090 s.connect((socket.gethostname(), 9090)) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 s.sendto(bytes('Hello, server!', 'utf-8'), (socket.gethostname(), 9090)) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 msg = s.recvfrom(2148) # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0440\u0430\u0437\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 print(msg[0].decode()) # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 s.close() \u041d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442, \u0437\u0430\u0442\u0435\u043c \u044d\u0442\u043e\u0442 \u0441\u043e\u043a\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 9090, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0433\u043e \u043d\u0430 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab1/task1/#1","text":"C\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c import socket # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 UDP s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u0440\u0438\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 \u043a \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 \u0445\u043e\u0441\u0442\u0443 (\u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0443) \u0438 \u043f\u043e\u0440\u0442\u0443 9090 s.bind((socket.gethostname(), 9090)) # \u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0446\u0438\u043a\u043b \u0434\u043b\u044f \u043f\u0440\u043e\u0441\u043b\u0443\u0448\u0438\u0432\u0430\u043d\u0438\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 while True: # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 (msg) \u0438 \u0430\u0434\u0440\u0435\u0441 (address) \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f msg, address = s.recvfrom(2148) # \u0414\u0435\u043a\u043e\u0434\u0438\u0440\u0443\u0435\u043c \u0438 \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 print(msg.decode()) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043c \u043e\u0442\u0432\u0435\u0442\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 s.sendto(bytes('Hello, client!', 'utf-8'), address) \u041d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 9090, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u0417\u0430\u0442\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c import socket # \u0421\u043e\u0437\u0434\u0430\u0451\u043c User Datagram Protocol \u0441\u043e\u043a\u0435\u0442 s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0441\u043e\u043a\u0435\u0442\u0430 \u043a \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0448\u0438\u043d\u0435, \u043f\u043e\u0440\u0442\u0443 9090 s.connect((socket.gethostname(), 9090)) # \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 s.sendto(bytes('Hello, server!', 'utf-8'), (socket.gethostname(), 9090)) # \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u043c \u043e\u0442\u0432\u0435\u0442 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 msg = s.recvfrom(2148) # \u043f\u0435\u0447\u0430\u0442\u0430\u0435\u043c \u0440\u0430\u0437\u043a\u043e\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 print(msg[0].decode()) # \u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u043c \u0441\u043e\u043a\u0435\u0442 s.close() \u041d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043a\u0435\u0442, \u0437\u0430\u0442\u0435\u043c \u044d\u0442\u043e\u0442 \u0441\u043e\u043a\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u043d\u0430 \u043f\u043e\u0440\u0442\u0443 9090, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442\u0432\u0435\u0442 \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0435\u0433\u043e \u043d\u0430 \u043a\u043e\u043d\u0441\u043e\u043b\u044c.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"lab1/task2/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2 C\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/task2/#2","text":"C\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0421\u0435\u0440\u0432\u0435\u0440 \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0438\u043a\u0430\u043a\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438, \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442, \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442\u0432\u0435\u0442. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0444\u043e\u0440\u043c\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"lab1/task3/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3 \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0421\u043e\u043a\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f html-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e, \u0430 \u0437\u0430\u0442\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0444\u0430\u0439\u043b index.html. html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u041a\u043b\u0438\u0435\u043d\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u043c\u044b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0445 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab1/task3/#3","text":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0421\u043e\u043a\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f html-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e, \u0430 \u0437\u0430\u0442\u0435\u043c \u0442\u0430\u043a\u0436\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0435\u0442 \u0444\u0430\u0439\u043b index.html. html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u041a\u043b\u0438\u0435\u043d\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u043f\u043e\u0441\u044b\u043b\u0430\u0435\u043c\u044b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c, \u0438 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u0445 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3"},{"location":"lab1/task4/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4 \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0412 \u0444\u0430\u0439\u043b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041f\u0435\u0440\u0432\u0430\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e \u0447\u0435\u043c \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u0412\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0435\u0441\u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430, \u0442\u043e \u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0422\u0440\u0435\u0442\u044c\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043c\u043e\u0433\u043b\u0438 \u0438\u043c\u0435\u0442\u044c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435. \u0412 \u0434\u0440\u0443\u0433\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u043f\u043e\u0442\u043e\u043a\u043e\u0432. \u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0434\u0432\u0430 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438\u0437 \u0447\u0430\u0442\u0430. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0423 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u0441\u043a\u0440\u0438\u043f\u0442. \u041e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0437\u043e\u0432 bind. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439: \u041f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: \u0412\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e: \u0422\u0440\u0435\u0442\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab1/task4/#4","text":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0412 \u0444\u0430\u0439\u043b\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041f\u0435\u0440\u0432\u0430\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u043e \u0447\u0435\u043c \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u0412\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0435\u0441\u043b\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043e\u0448\u0438\u0431\u043a\u0430, \u0442\u043e \u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u0441\u0435\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u044b\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u043c \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0422\u0440\u0435\u0442\u044c\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u043c\u043e\u0433\u043b\u0438 \u0438\u043c\u0435\u0442\u044c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435. \u0412 \u0434\u0440\u0443\u0433\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0439 \u0441\u043e\u043a\u0435\u0442, \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u043f\u043e\u0442\u043e\u043a\u043e\u0432. \u0417\u0430\u0442\u0435\u043c \u0441\u043e\u0437\u0434\u0430\u044e\u0442\u0441\u044f \u0434\u0432\u0430 \u043f\u043e\u0442\u043e\u043a\u0430 \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0438\u0437 \u0447\u0430\u0442\u0430. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0423 \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0439 \u0441\u043a\u0440\u0438\u043f\u0442. \u041e\u0442\u043b\u0438\u0447\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u044b\u0437\u043e\u0432 bind. \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439: \u041f\u0435\u0440\u0432\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435: \u0412\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e: \u0422\u0440\u0435\u0442\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0433\u043e:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4"},{"location":"lab1/task5/","text":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5 \u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0417\u0434\u0435\u0441\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f http-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0434\u043b\u044f \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d, \u043a\u0443\u0434\u0430 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u0414\u0430\u043b\u0435\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0433\u0434\u0435 \u043e\u043d \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. \u0412 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432\u0445\u043e\u0434\u0438\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0438 \u0435\u0433\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430. \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430: \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u043c\u0435\u0442\u043e\u0434, \u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430, \u0437\u0430\u0442\u0435\u043c \u0430\u0434\u0440\u0435\u0441 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043e\u0444\u043e\u0440\u043c\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c. \u0412 \u043a\u043e\u043d\u0446\u0435 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u0434\u0451\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0438\u0441\u0430\u043d \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 parse_headers. \u0412 \u0435\u0435 \u0446\u0438\u043a\u043b\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u0439\u043b, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0434\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u041f\u043e\u0441\u043b\u0435 \u0438\u0434\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 handle_request. \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u043e\u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043b\u0438\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u043e\u0432\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a, \u043b\u0438\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u0412 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b, \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043e\u0442\u0432\u0435\u0442\u0430. \u0415\u0441\u043b\u0438 \u0436\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435, \u0442\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043e\u0442\u0432\u0435\u0442\u0430. \u0412 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430 send_response \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u0439\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0438\u0435\u043d\u0442\u0443, \u0432 \u043d\u0435\u0433\u043e \u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0412\u044b\u0432\u043e\u0434 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab1/task5/#5","text":"\u0421\u0435\u0440\u0432\u0435\u0440\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0417\u0434\u0435\u0441\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f http-\u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u043b\u043e\u0432\u0430\u0440\u044f \u0434\u043b\u044f \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d, \u043a\u0443\u0434\u0430 \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043e\u0446\u0435\u043d\u043a\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u0414\u0430\u043b\u0435\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0430 \u0433\u043b\u0430\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0433\u0434\u0435 \u043e\u043d \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. \u0412 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432\u0445\u043e\u0434\u0438\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430, \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0430 \u0438 \u0435\u0433\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430. \u041f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430: \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430, \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u043d\u0430 \u043c\u0435\u0442\u043e\u0434, \u0430\u0434\u0440\u0435\u0441 \u0438 \u0432\u0435\u0440\u0441\u0438\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430, \u0437\u0430\u0442\u0435\u043c \u0430\u0434\u0440\u0435\u0441 \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432 \u0441\u0432\u043e\u044e \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043e\u0444\u043e\u0440\u043c\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c. \u0412 \u043a\u043e\u043d\u0446\u0435 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0438\u0434\u0451\u0442 \u043f\u0430\u0440\u0441\u0438\u043d\u0433 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u043f\u0438\u0441\u0430\u043d \u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 parse_headers. \u0412 \u0435\u0435 \u0446\u0438\u043a\u043b\u0435 \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u0439\u043b, \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0434\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432. \u041f\u043e\u0441\u043b\u0435 \u0438\u0434\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442\u0432\u0435\u0442\u0430 handle_request. \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043c\u0435\u0442\u043e\u0434\u0430 \u043e\u043d\u0430 \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442 \u043b\u0438\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0437\u0430\u043f\u0438\u0441\u0438 \u043d\u043e\u0432\u044b\u0445 \u043e\u0446\u0435\u043d\u043e\u043a, \u043b\u0438\u0431\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u0412 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442\u0441\u044f \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u043e\u0439 \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u044b, \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u044c, \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043e\u0442\u0432\u0435\u0442\u0430. \u0415\u0441\u043b\u0438 \u0436\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435, \u0442\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0442\u0435\u043b\u043e \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u043e\u0442\u0432\u0435\u0442\u0430. \u0412 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430 send_response \u0441\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0444\u0430\u0439\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043a\u043b\u0438\u0435\u043d\u0442\u0443, \u0432 \u043d\u0435\u0433\u043e \u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b \u0438\u0437 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0445 \u0444\u0443\u043d\u043a\u0446\u0438\u0439. \u041a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0412\u044b\u0432\u043e\u0434 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430:","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5"},{"location":"lab2/database_setup/","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0421\u0423\u0411\u0414 sqlite3 \u0421\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438: User: \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435; Topic: \u0442\u043e\u043f\u0438\u043a \u0437\u0430\u043a\u0430\u0437\u0430; Transaction: \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0434\u0435\u043d\u0435\u0433; JobStatus: \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043a\u0430\u0437\u0430; Job: \u0437\u0430\u043a\u0430\u0437; MatchType: \u0442\u0438\u043f \u0441\u0432\u044f\u0437\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0437\u0430\u043a\u0430\u0437\u0430; Match: \u0441\u0432\u044f\u0437\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0437\u0430\u043a\u0430\u0437\u0430; ReviewType: \u0442\u0438\u043f \u043e\u0442\u0437\u044b\u0432\u0430; Review: \u043e\u0442\u0437\u044b\u0432; Message: \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0414\u0430\u043d\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0444\u0430\u0439\u043b\u0435 admin.py \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.","title":"\u0411\u0414"},{"location":"lab2/database_setup/#_1","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0421\u0423\u0411\u0414 sqlite3","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"lab2/database_setup/#_2","text":"\u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438: User: \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435; Topic: \u0442\u043e\u043f\u0438\u043a \u0437\u0430\u043a\u0430\u0437\u0430; Transaction: \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0434\u0435\u043d\u0435\u0433; JobStatus: \u0441\u0442\u0430\u0442\u0443\u0441 \u0437\u0430\u043a\u0430\u0437\u0430; Job: \u0437\u0430\u043a\u0430\u0437; MatchType: \u0442\u0438\u043f \u0441\u0432\u044f\u0437\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0437\u0430\u043a\u0430\u0437\u0430; Match: \u0441\u0432\u044f\u0437\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0437\u0430\u043a\u0430\u0437\u0430; ReviewType: \u0442\u0438\u043f \u043e\u0442\u0437\u044b\u0432\u0430; Review: \u043e\u0442\u0437\u044b\u0432; Message: \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435. \u0414\u0430\u043d\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0444\u0430\u0439\u043b\u0435 admin.py \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.","title":"\u0421\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"lab2/forms/","text":"\u0424\u043e\u0440\u043c\u044b \u0424\u043e\u0440\u043c\u044b \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u0432\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u0418\u0437 \u043d\u0438\u0445 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 frontend-\u0430. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 forms.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.forms import ModelForm from django.contrib.auth.forms import UserCreationForm from .models import Job, User from django import forms class MyUserCreationForm(UserCreationForm): class Meta: model = User fields = ['name', 'username', 'email', 'password1', 'password2'] pass class JobForm(ModelForm): class Meta: model = Job fields = ['name', 'description', 'topic', 'cost'] exclude = [] widgets = { 'cost' : forms.TextInput(attrs = {'placeholder': '1000 \u0440\u0443\u0431'}), } class UserForm(ModelForm): class Meta: model = User fields = ['avatar', 'name', 'username', 'email', 'bio'] widgets = { 'avatar': forms.TextInput(attrs={'placeholder': '\u0430\u0432\u0430\u0442\u0430\u0440', \"title\": \"\u0430\u0432\u0430\u0442\u0430\u0440\"}), 'name': forms.TextInput(attrs={'placeholder': '\u0438\u043c\u044f', \"title\": \"\u0438\u043c\u044f\"}), 'username': forms.TextInput(attrs={'placeholder': '\u043b\u043e\u0433\u0438\u043d', \"title\": \"\u043b\u043e\u0433\u0438\u043d\"}), 'bio': forms.TextInput(attrs={'placeholder': '\u0431\u0438\u043e', \"title\": \"\u0431\u0438\u043e\"}), }","title":"\u0424\u043e\u0440\u043c\u044b"},{"location":"lab2/forms/#_1","text":"\u0424\u043e\u0440\u043c\u044b \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u0432\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u0418\u0437 \u043d\u0438\u0445 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 frontend-\u0430. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 forms.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.forms import ModelForm from django.contrib.auth.forms import UserCreationForm from .models import Job, User from django import forms class MyUserCreationForm(UserCreationForm): class Meta: model = User fields = ['name', 'username', 'email', 'password1', 'password2'] pass class JobForm(ModelForm): class Meta: model = Job fields = ['name', 'description', 'topic', 'cost'] exclude = [] widgets = { 'cost' : forms.TextInput(attrs = {'placeholder': '1000 \u0440\u0443\u0431'}), } class UserForm(ModelForm): class Meta: model = User fields = ['avatar', 'name', 'username', 'email', 'bio'] widgets = { 'avatar': forms.TextInput(attrs={'placeholder': '\u0430\u0432\u0430\u0442\u0430\u0440', \"title\": \"\u0430\u0432\u0430\u0442\u0430\u0440\"}), 'name': forms.TextInput(attrs={'placeholder': '\u0438\u043c\u044f', \"title\": \"\u0438\u043c\u044f\"}), 'username': forms.TextInput(attrs={'placeholder': '\u043b\u043e\u0433\u0438\u043d', \"title\": \"\u043b\u043e\u0433\u0438\u043d\"}), 'bio': forms.TextInput(attrs={'placeholder': '\u0431\u0438\u043e', \"title\": \"\u0431\u0438\u043e\"}), }","title":"\u0424\u043e\u0440\u043c\u044b"},{"location":"lab2/models/","text":"\u041c\u043e\u0434\u0435\u043b\u0438 \u041c\u043e\u0434\u0435\u043b\u0438 \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 models.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.db import models from django.contrib.auth.models import AbstractUser class User(AbstractUser): name = models.CharField(max_length=200, null=True) email = models.EmailField(unique=True) bio = models.TextField(null=True) avatar = models.ImageField(null=True, default='avatar.svg') balance = models.DecimalField(max_digits=20, decimal_places=2, null=False, default=0) USERNAME_FIELD = 'email' REQUIRED_FIELDS = [] class Topic(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Transaction(models.Model): name = models.CharField(max_length=200, null=True) amount = models.DecimalField(max_digits=20, decimal_places=2, null=False, default=0) addition = models.BooleanField(null=False, default=True) created = models.DateTimeField(auto_now_add=True) user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class JobStatus(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Job(models.Model): name = models.CharField(max_length=200) description = models.TextField(null=True, blank=True) cost = models.DecimalField(max_digits=20, decimal_places=2, null=False) created = models.DateTimeField(auto_now_add=True) updated = models.DateTimeField(auto_now=True) topic = models.ForeignKey(Topic, on_delete=models.SET_NULL, null=True) status = models.ForeignKey(JobStatus, on_delete=models.SET_NULL, null=True) class Meta: ordering = ['-updated', '-created'] class MatchType(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Match(models.Model): job = models.ForeignKey(Job, on_delete=models.SET_NULL, null=True) user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) created = models.DateTimeField(auto_now_add=True) type = models.ForeignKey(MatchType, on_delete=models.SET_NULL, null=True) class Meta: ordering = ['-created'] class ReviewType(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Review(models.Model): rating = models.SmallIntegerField() body = models.TextField() created = models.DateTimeField(auto_now_add=True) match = models.ForeignKey(Match, on_delete=models.CASCADE) type = models.ForeignKey(ReviewType, on_delete=models.SET_NULL, null=True) class Meta: ordering = ['-created'] class Message(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) job = models.ForeignKey(Job, on_delete=models.CASCADE) body = models.TextField() updated = models.DateTimeField(auto_now=True) created = models.DateTimeField(auto_now_add=True) class Meta: ordering = ['-updated', '-created'] def __str__(self): return self.body[0:50]","title":"\u041c\u043e\u0434\u0435\u043b\u0438"},{"location":"lab2/models/#_1","text":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 models.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.db import models from django.contrib.auth.models import AbstractUser class User(AbstractUser): name = models.CharField(max_length=200, null=True) email = models.EmailField(unique=True) bio = models.TextField(null=True) avatar = models.ImageField(null=True, default='avatar.svg') balance = models.DecimalField(max_digits=20, decimal_places=2, null=False, default=0) USERNAME_FIELD = 'email' REQUIRED_FIELDS = [] class Topic(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Transaction(models.Model): name = models.CharField(max_length=200, null=True) amount = models.DecimalField(max_digits=20, decimal_places=2, null=False, default=0) addition = models.BooleanField(null=False, default=True) created = models.DateTimeField(auto_now_add=True) user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class JobStatus(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Job(models.Model): name = models.CharField(max_length=200) description = models.TextField(null=True, blank=True) cost = models.DecimalField(max_digits=20, decimal_places=2, null=False) created = models.DateTimeField(auto_now_add=True) updated = models.DateTimeField(auto_now=True) topic = models.ForeignKey(Topic, on_delete=models.SET_NULL, null=True) status = models.ForeignKey(JobStatus, on_delete=models.SET_NULL, null=True) class Meta: ordering = ['-updated', '-created'] class MatchType(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Match(models.Model): job = models.ForeignKey(Job, on_delete=models.SET_NULL, null=True) user = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) created = models.DateTimeField(auto_now_add=True) type = models.ForeignKey(MatchType, on_delete=models.SET_NULL, null=True) class Meta: ordering = ['-created'] class ReviewType(models.Model): name = models.CharField(max_length=200) def __str__(self): return self.name class Review(models.Model): rating = models.SmallIntegerField() body = models.TextField() created = models.DateTimeField(auto_now_add=True) match = models.ForeignKey(Match, on_delete=models.CASCADE) type = models.ForeignKey(ReviewType, on_delete=models.SET_NULL, null=True) class Meta: ordering = ['-created'] class Message(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) job = models.ForeignKey(Job, on_delete=models.CASCADE) body = models.TextField() updated = models.DateTimeField(auto_now=True) created = models.DateTimeField(auto_now_add=True) class Meta: ordering = ['-updated', '-created'] def __str__(self): return self.body[0:50]","title":"\u041c\u043e\u0434\u0435\u043b\u0438"},{"location":"lab2/task/","text":"Freelance \u0431\u0438\u0440\u0436\u0430 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0438 sqlite3, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c: \u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0437\u0430\u043a\u0430\u0437\u0430\u0445: \u0438\u043c\u044f \u0437\u0430\u043a\u0430\u0437\u0447\u0438\u043a\u0430, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430 \u0438 \u0446\u0435\u043d\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0447\u0438\u043a\u0430, \u043e\u043f\u044b\u0442 \u0438 \u043a\u043b\u0430\u0441\u0441 \u0437\u0430\u043a\u0430\u0437\u0447\u0438\u043a\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0432\u044b\u0431\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u043e\u0432. \u0417\u0430\u043a\u0430\u0437\u0447\u0438\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0437\u0430\u043a\u0430\u0437\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f \u0437\u0430\u043a\u0430\u0437\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u0430 \u0442\u0430\u043a \u0436\u0435 \u043f\u043e\u0438\u0441\u043a \u0437\u0430\u043a\u0430\u0437\u0430 \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c.","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab2/task/#freelance","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0438 sqlite3, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c: \u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0437\u0430\u043a\u0430\u0437\u0430\u0445: \u0438\u043c\u044f \u0437\u0430\u043a\u0430\u0437\u0447\u0438\u043a\u0430, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430 \u0438 \u0446\u0435\u043d\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0430, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u043a\u0430\u0437\u0447\u0438\u043a\u0430, \u043e\u043f\u044b\u0442 \u0438 \u043a\u043b\u0430\u0441\u0441 \u0437\u0430\u043a\u0430\u0437\u0447\u0438\u043a\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0432\u044b\u0431\u043e\u0440 \u0437\u0430\u043a\u0430\u0437\u043e\u0432. \u0417\u0430\u043a\u0430\u0437\u0447\u0438\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0437\u0430\u043a\u0430\u0437\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044f \u0437\u0430\u043a\u0430\u0437\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u0437\u0430\u043a\u0430\u0437\u043e\u0432, \u0430 \u0442\u0430\u043a \u0436\u0435 \u043f\u043e\u0438\u0441\u043a \u0437\u0430\u043a\u0430\u0437\u0430 \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c.","title":"Freelance \u0431\u0438\u0440\u0436\u0430"},{"location":"lab2/views/","text":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 Django \u2014\u044d\u0442\u043e \u0442\u043e, \u0447\u0442\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0435 MVC \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438. \u042d\u0442\u043e \u043c\u0435\u0441\u0442\u043e, \u0433\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432. \u041e\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 views.py. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.shortcuts import render, redirect from django.http import HttpResponse from django.contrib import messages from django.contrib.auth.decorators import login_required from django.db.models import Q from django.contrib.auth import authenticate, login, logout from .models import User, Topic, JobStatus, Job, MatchType, Match, ReviewType, Review, Message from .forms import JobForm, UserForm, MyUserCreationForm def loginPage(request): page = 'login' if request.user.is_authenticated: return redirect('home') if request.method == 'POST': email = request.POST.get('email').lower() password = request.POST.get('password') try: user = User.objects.get(email=email) except: messages.error(request, 'User does not exist') user = authenticate(request, email=email, password=password) if user is not None: login(request, user) return redirect('home') else: messages.error(request, 'Username OR password does not exit') context = {'page': page} return render(request, 'base/login_register.html', context) def logoutUser(request): logout(request) return redirect('home') def registerPage(request): form = MyUserCreationForm() if request.method == 'POST': form = MyUserCreationForm(request.POST) if form.is_valid(): user = form.save(commit=False) user.username = user.username.lower() user.save() login(request, user) return redirect('home') else: messages.error(request, 'An error occurred during registration') return render(request, 'base/login_register.html', {'form': form}) def get_customer(job): customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user')[0] return User.objects.get(id=customer_id['user']) def get_job_to_customer(jobs): job_to_customer = {} # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c for job in jobs: customer = get_customer(job) if customer: job_to_customer[job] = customer return job_to_customer def participant_count(request, job): matches = Match.objects.filter(job=job) count = matches.count() context = {'count': count} return render(request, 'joined_into_job.html', context) class ParticipantCount: def __init__(self, jobs): self.counts = {} for job in jobs: matches = Match.objects.filter(job=job) count = matches.count() self.counts[job] = count def get_count(self, job): return self.counts[job] def home(request): q = request.GET.get('q') if request.GET.get('q') != None else '' jobs = Job.objects.filter( Q(topic__name__icontains=q) | Q(name__icontains=q) | Q(description__icontains=q) ) for job in jobs: job.__dict__['participant_count'] = Match.objects.filter(job=job).count() job.__dict__['participants'] = [match.user for match in Match.objects.filter(job=job)] job.__dict__['cost'] = round(job.__dict__['cost']) topics = Topic.objects.all()[0:5] job_count = jobs.count() job_messages = Message.objects.filter( Q(job__topic__name__icontains=q))[0:3] job_to_customer = get_job_to_customer(jobs) context = {'jobs': jobs, 'job_to_customer': job_to_customer, 'topics': topics, 'job_count': job_count, 'job_messages': job_messages} return render(request, 'base/home.html', context) def jobRoom(request, pk): job = Job.objects.get(id=pk) job_messages = job.message_set.all() participants_id = Match.objects.filter(job=job).values('user') participants = User.objects.filter(id__in=[user_id['user'] for user_id in participants_id]) print() if request.method == 'POST': message = Message.objects.create( user=request.user, job=job, body=request.POST.get('body') ) message.save() if Match.objects.filter(user=request.user).count() == 0: match = Match.objects.create( job = job, user = request.user, type = MatchType.objects.get_or_create(name='Participant')[0] ) match.save() return redirect('job', pk=job.id) customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user') job_customer = User.objects.filter(id=customer_id[0]['user'])[0] if str(request.user) != 'AnonymousUser': matches = Match.objects.filter(Q(user=request.user) & Q(job=job)) statuses = [match.type.name for match in matches] else: statuses = [] status = None if len(statuses) == 0: status = None elif 'Performer' in statuses: status = 'Performer' elif '\u0421andidate' in statuses: pass status = 'Candidate' elif 'Participant' in statuses: status = 'Participant' context = {'job': job, 'job_messages': job_messages, 'participants': participants, 'job_customer': job_customer, 'status': status} return render(request, 'base/job.html', context) def userProfile(request, pk): user = User.objects.get(id=pk) jobs = Job.objects.filter(id__in=[x['job'] for x in Match.objects.filter(user=user, type=MatchType.objects.get_or_create(name='Customer')[0].id).values('job') ]) job_messages = user.message_set.all() topics = Topic.objects.all() job_to_customer = get_job_to_customer(jobs) context = {'user': user, 'job_to_customer': job_to_customer, 'job_messages': job_messages, 'topics': topics} return render(request, 'base/profile.html', context) def userBalance(request, pk): # TODO: user = User.objects.get(id=pk) transactions = user.transaction_set.all() context = { 'user': user, 'transactions': transactions } return render(request, f'base/balance.html', context) @login_required(login_url='login') def createJob(request): form = JobForm() topics = Topic.objects.all() if request.method == 'POST': topic_name = request.POST.get('topic') topic, created = Topic.objects.get_or_create(name=topic_name) job = Job.objects.create( topic=topic, name=request.POST.get('name'), description=request.POST.get('description'), status = JobStatus.objects.get_or_create(name='Find performer')[0], cost=request.POST.get('cost'), ) job.save() match = Match.objects.create( job = job, user = request.user, type = MatchType.objects.get_or_create(name='Customer')[0], ) match.save() return redirect('home') context = {'form': form, 'topics': topics} return render(request, 'base/job_form.html', context) @login_required(login_url='login') def updateJob(request, pk): job = Job.objects.get(id=pk) form = JobForm(instance=job) topics = Topic.objects.all() customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user') job_customer = User.objects.filter(id=customer_id[0]['user'])[0] if request.user != job_customer: return HttpResponse('Your are not allowed here!!') if request.method == 'POST': topic_name = request.POST.get('topic') topic, created = Topic.objects.get_or_create(name=topic_name) job.name = request.POST.get('name') job.topic = topic job.description = request.POST.get('description') job.cost = request.POST.get('cost') job.save() return redirect('home') context = {'form': form, 'topics': topics, 'job': job} return render(request, 'base/job_form.html', context) def get_customer(job): customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user') job_customer = User.objects.filter(id=customer_id[0]['user'])[0] return job_customer @login_required(login_url='login') def deleteJob(request, pk): job = Job.objects.get(id=pk) job_customer = get_customer(job) if request.user != job_customer: return HttpResponse('Your are not allowed here!!') if request.method == 'POST': job.delete() return redirect('home') context = {'obj': job} return render(request, 'base/delete.html', {}) @login_required(login_url='login') def deleteMessage(request, pk): message = Message.objects.get(id=pk) if request.user != message.user: return HttpResponse('Your are not allowed here!!') if request.method == 'POST': message.delete() return redirect('home') return render(request, 'base/delete.html', {'obj': message}) @login_required(login_url='login') def updateUser(request): user = request.user form = UserForm(instance=user) if request.method == 'POST': form = UserForm(request.POST, request.FILES, instance=user) if form.is_valid(): form.save() return redirect('user-profile', pk=user.id) return render(request, 'base/update-user.html', {'form': form}) def topicsPage(request): q = request.GET.get('q') if request.GET.get('q') != None else '' topics = Topic.objects.filter(name__icontains=q) return render(request, 'base/topics.html', {'topics': topics}) def activityPage(request): job_messages = Message.objects.all() return render(request, 'base/activity.html', {'job_messages': job_messages}) @login_required(login_url='login') def respond(request, pk): job = Job.objects.get(id=pk) job_customer = get_customer(job) \u0441andidate_matches = Match.objects.filter(Q(user=request.user)& Q(job=job)& Q(type=MatchType.objects.get_or_create(name='\u0421andidate')[0])) if request.user == job_customer: return HttpResponse('Your are the creator of this job!!') if request.user in [match.user for match in \u0441andidate_matches]: return HttpResponse('\u0412\u044b \u0443\u0436\u0435 \u0441\u0442\u0430\u043b\u0438 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u043c!!') if request.method == 'POST': match = Match.objects.filter(job=job) match = Match.objects.create( job = job, user = request.user, type = MatchType.objects.get_or_create(name='\u0421andidate')[0], ) match.save() return redirect('home') context = {'obj': job} return render(request, 'base/respond.html', context) @login_required(login_url='login') def unrespond(request, pk): job = Job.objects.get(id=pk) job_customer = get_customer(job) \u0441andidate_matches = Match.objects.filter(Q(user=request.user)& Q(job=job)& Q(type=MatchType.objects.get_or_create(name='\u0421andidate')[0])) if request.user == job_customer: return HttpResponse('Your are the creator of this job!!') if request.user not in [match.user for match in \u0441andidate_matches]: return HttpResponse('\u0412\u044b \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0435\u0441\u044c \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u043c!!') if request.method == 'POST': match = Match.objects.get( job = job, user = request.user, type = MatchType.objects.get_or_create(name='\u0421andidate')[0], ) match.delete() return redirect('home') context = {'obj': job} return render(request, 'base/unrespond.html', context)","title":"Views"},{"location":"lab2/views/#_1","text":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 Django \u2014\u044d\u0442\u043e \u0442\u043e, \u0447\u0442\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0435 MVC \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438. \u042d\u0442\u043e \u043c\u0435\u0441\u0442\u043e, \u0433\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432. \u041e\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 views.py. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.shortcuts import render, redirect from django.http import HttpResponse from django.contrib import messages from django.contrib.auth.decorators import login_required from django.db.models import Q from django.contrib.auth import authenticate, login, logout from .models import User, Topic, JobStatus, Job, MatchType, Match, ReviewType, Review, Message from .forms import JobForm, UserForm, MyUserCreationForm def loginPage(request): page = 'login' if request.user.is_authenticated: return redirect('home') if request.method == 'POST': email = request.POST.get('email').lower() password = request.POST.get('password') try: user = User.objects.get(email=email) except: messages.error(request, 'User does not exist') user = authenticate(request, email=email, password=password) if user is not None: login(request, user) return redirect('home') else: messages.error(request, 'Username OR password does not exit') context = {'page': page} return render(request, 'base/login_register.html', context) def logoutUser(request): logout(request) return redirect('home') def registerPage(request): form = MyUserCreationForm() if request.method == 'POST': form = MyUserCreationForm(request.POST) if form.is_valid(): user = form.save(commit=False) user.username = user.username.lower() user.save() login(request, user) return redirect('home') else: messages.error(request, 'An error occurred during registration') return render(request, 'base/login_register.html', {'form': form}) def get_customer(job): customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user')[0] return User.objects.get(id=customer_id['user']) def get_job_to_customer(jobs): job_to_customer = {} # \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c for job in jobs: customer = get_customer(job) if customer: job_to_customer[job] = customer return job_to_customer def participant_count(request, job): matches = Match.objects.filter(job=job) count = matches.count() context = {'count': count} return render(request, 'joined_into_job.html', context) class ParticipantCount: def __init__(self, jobs): self.counts = {} for job in jobs: matches = Match.objects.filter(job=job) count = matches.count() self.counts[job] = count def get_count(self, job): return self.counts[job] def home(request): q = request.GET.get('q') if request.GET.get('q') != None else '' jobs = Job.objects.filter( Q(topic__name__icontains=q) | Q(name__icontains=q) | Q(description__icontains=q) ) for job in jobs: job.__dict__['participant_count'] = Match.objects.filter(job=job).count() job.__dict__['participants'] = [match.user for match in Match.objects.filter(job=job)] job.__dict__['cost'] = round(job.__dict__['cost']) topics = Topic.objects.all()[0:5] job_count = jobs.count() job_messages = Message.objects.filter( Q(job__topic__name__icontains=q))[0:3] job_to_customer = get_job_to_customer(jobs) context = {'jobs': jobs, 'job_to_customer': job_to_customer, 'topics': topics, 'job_count': job_count, 'job_messages': job_messages} return render(request, 'base/home.html', context) def jobRoom(request, pk): job = Job.objects.get(id=pk) job_messages = job.message_set.all() participants_id = Match.objects.filter(job=job).values('user') participants = User.objects.filter(id__in=[user_id['user'] for user_id in participants_id]) print() if request.method == 'POST': message = Message.objects.create( user=request.user, job=job, body=request.POST.get('body') ) message.save() if Match.objects.filter(user=request.user).count() == 0: match = Match.objects.create( job = job, user = request.user, type = MatchType.objects.get_or_create(name='Participant')[0] ) match.save() return redirect('job', pk=job.id) customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user') job_customer = User.objects.filter(id=customer_id[0]['user'])[0] if str(request.user) != 'AnonymousUser': matches = Match.objects.filter(Q(user=request.user) & Q(job=job)) statuses = [match.type.name for match in matches] else: statuses = [] status = None if len(statuses) == 0: status = None elif 'Performer' in statuses: status = 'Performer' elif '\u0421andidate' in statuses: pass status = 'Candidate' elif 'Participant' in statuses: status = 'Participant' context = {'job': job, 'job_messages': job_messages, 'participants': participants, 'job_customer': job_customer, 'status': status} return render(request, 'base/job.html', context) def userProfile(request, pk): user = User.objects.get(id=pk) jobs = Job.objects.filter(id__in=[x['job'] for x in Match.objects.filter(user=user, type=MatchType.objects.get_or_create(name='Customer')[0].id).values('job') ]) job_messages = user.message_set.all() topics = Topic.objects.all() job_to_customer = get_job_to_customer(jobs) context = {'user': user, 'job_to_customer': job_to_customer, 'job_messages': job_messages, 'topics': topics} return render(request, 'base/profile.html', context) def userBalance(request, pk): # TODO: user = User.objects.get(id=pk) transactions = user.transaction_set.all() context = { 'user': user, 'transactions': transactions } return render(request, f'base/balance.html', context) @login_required(login_url='login') def createJob(request): form = JobForm() topics = Topic.objects.all() if request.method == 'POST': topic_name = request.POST.get('topic') topic, created = Topic.objects.get_or_create(name=topic_name) job = Job.objects.create( topic=topic, name=request.POST.get('name'), description=request.POST.get('description'), status = JobStatus.objects.get_or_create(name='Find performer')[0], cost=request.POST.get('cost'), ) job.save() match = Match.objects.create( job = job, user = request.user, type = MatchType.objects.get_or_create(name='Customer')[0], ) match.save() return redirect('home') context = {'form': form, 'topics': topics} return render(request, 'base/job_form.html', context) @login_required(login_url='login') def updateJob(request, pk): job = Job.objects.get(id=pk) form = JobForm(instance=job) topics = Topic.objects.all() customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user') job_customer = User.objects.filter(id=customer_id[0]['user'])[0] if request.user != job_customer: return HttpResponse('Your are not allowed here!!') if request.method == 'POST': topic_name = request.POST.get('topic') topic, created = Topic.objects.get_or_create(name=topic_name) job.name = request.POST.get('name') job.topic = topic job.description = request.POST.get('description') job.cost = request.POST.get('cost') job.save() return redirect('home') context = {'form': form, 'topics': topics, 'job': job} return render(request, 'base/job_form.html', context) def get_customer(job): customer_id = Match.objects.filter(job=job, type=MatchType.objects.get_or_create(name='Customer')[0]).values('user') job_customer = User.objects.filter(id=customer_id[0]['user'])[0] return job_customer @login_required(login_url='login') def deleteJob(request, pk): job = Job.objects.get(id=pk) job_customer = get_customer(job) if request.user != job_customer: return HttpResponse('Your are not allowed here!!') if request.method == 'POST': job.delete() return redirect('home') context = {'obj': job} return render(request, 'base/delete.html', {}) @login_required(login_url='login') def deleteMessage(request, pk): message = Message.objects.get(id=pk) if request.user != message.user: return HttpResponse('Your are not allowed here!!') if request.method == 'POST': message.delete() return redirect('home') return render(request, 'base/delete.html', {'obj': message}) @login_required(login_url='login') def updateUser(request): user = request.user form = UserForm(instance=user) if request.method == 'POST': form = UserForm(request.POST, request.FILES, instance=user) if form.is_valid(): form.save() return redirect('user-profile', pk=user.id) return render(request, 'base/update-user.html', {'form': form}) def topicsPage(request): q = request.GET.get('q') if request.GET.get('q') != None else '' topics = Topic.objects.filter(name__icontains=q) return render(request, 'base/topics.html', {'topics': topics}) def activityPage(request): job_messages = Message.objects.all() return render(request, 'base/activity.html', {'job_messages': job_messages}) @login_required(login_url='login') def respond(request, pk): job = Job.objects.get(id=pk) job_customer = get_customer(job) \u0441andidate_matches = Match.objects.filter(Q(user=request.user)& Q(job=job)& Q(type=MatchType.objects.get_or_create(name='\u0421andidate')[0])) if request.user == job_customer: return HttpResponse('Your are the creator of this job!!') if request.user in [match.user for match in \u0441andidate_matches]: return HttpResponse('\u0412\u044b \u0443\u0436\u0435 \u0441\u0442\u0430\u043b\u0438 \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u043c!!') if request.method == 'POST': match = Match.objects.filter(job=job) match = Match.objects.create( job = job, user = request.user, type = MatchType.objects.get_or_create(name='\u0421andidate')[0], ) match.save() return redirect('home') context = {'obj': job} return render(request, 'base/respond.html', context) @login_required(login_url='login') def unrespond(request, pk): job = Job.objects.get(id=pk) job_customer = get_customer(job) \u0441andidate_matches = Match.objects.filter(Q(user=request.user)& Q(job=job)& Q(type=MatchType.objects.get_or_create(name='\u0421andidate')[0])) if request.user == job_customer: return HttpResponse('Your are the creator of this job!!') if request.user not in [match.user for match in \u0441andidate_matches]: return HttpResponse('\u0412\u044b \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0435\u0441\u044c \u043a\u0430\u043d\u0434\u0438\u0434\u0430\u0442\u043e\u043c!!') if request.method == 'POST': match = Match.objects.get( job = job, user = request.user, type = MatchType.objects.get_or_create(name='\u0421andidate')[0], ) match.delete() return redirect('home') context = {'obj': job} return render(request, 'base/unrespond.html', context)","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f"},{"location":"lab3/database_setup/","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0421\u0423\u0411\u0414 sqlite3 \u0421\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438: User: \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435; File: \u0444\u0430\u0439\u043b, \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c; Meeting: \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u0434\u0432\u0443\u0445 \u0438 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043b\u043e\u0432\u0435\u043a; GradeReport: \u0432\u0435\u0434\u043e\u043c\u043e\u0441\u0442\u044c; Teacher: \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c; ProjectTopic: \u0442\u0435\u043c\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430; Student: \u0441\u0442\u0443\u0434\u0435\u043d\u0442; Grade: \u043e\u0446\u0435\u043d\u043a\u0430; Project: \u043f\u0440\u043e\u0435\u043a\u0442; ProjectMeeting: \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0414\u0430\u043d\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0444\u0430\u0439\u043b\u0435 admin.py \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.","title":"\u0411\u0414"},{"location":"lab3/database_setup/#_1","text":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u0430\u044f \u0421\u0423\u0411\u0414 sqlite3","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"lab3/database_setup/#_2","text":"\u0414\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430\u043c \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438: User: \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435; File: \u0444\u0430\u0439\u043b, \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c; Meeting: \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u0434\u0432\u0443\u0445 \u0438 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043b\u043e\u0432\u0435\u043a; GradeReport: \u0432\u0435\u0434\u043e\u043c\u043e\u0441\u0442\u044c; Teacher: \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u044c; ProjectTopic: \u0442\u0435\u043c\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430; Student: \u0441\u0442\u0443\u0434\u0435\u043d\u0442; Grade: \u043e\u0446\u0435\u043d\u043a\u0430; Project: \u043f\u0440\u043e\u0435\u043a\u0442; ProjectMeeting: \u0432\u0441\u0442\u0440\u0435\u0447\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u0414\u0430\u043d\u043d\u044b\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0432 \u0444\u0430\u0439\u043b\u0435 admin.py \u043d\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.","title":"\u0421\u0443\u0449\u043d\u043e\u0441\u0442\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445"},{"location":"lab3/forms/","text":"\u0424\u043e\u0440\u043c\u044b \u0424\u043e\u0440\u043c\u044b \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u0432\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u0418\u0437 \u043d\u0438\u0445 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 frontend-\u0430. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 forms.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: # *** \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u0444\u043e\u0440\u043c \u043f\u043e \u043b\u0430\u0431\u0435 3 \u0432 \u0444\u0430\u0439\u043b\u0435 forms.py \u043d\u0435\u0442 *** # from django.forms import ModelForm # from django.contrib.auth.forms import UserCreationForm # from .models import Job, User # from django import forms # class MyUserCreationForm(UserCreationForm): # class Meta: # model = User # fields = ['name', 'username', 'email', 'password1', 'password2'] # pass # class JobForm(ModelForm): # class Meta: # model = Job # fields = ['name', 'description', 'topic', 'cost'] # exclude = [] # widgets = { # 'cost' : forms.TextInput(attrs = {'placeholder': '1000 \u0440\u0443\u0431'}), # } # class UserForm(ModelForm): # class Meta: # model = User # fields = ['avatar', 'name', 'username', 'email', 'bio'] # widgets = { # 'avatar': forms.TextInput(attrs={'placeholder': '\u0430\u0432\u0430\u0442\u0430\u0440', \"title\": \"\u0430\u0432\u0430\u0442\u0430\u0440\"}), # 'name': forms.TextInput(attrs={'placeholder': '\u0438\u043c\u044f', \"title\": \"\u0438\u043c\u044f\"}), # 'username': forms.TextInput(attrs={'placeholder': '\u043b\u043e\u0433\u0438\u043d', \"title\": \"\u043b\u043e\u0433\u0438\u043d\"}), # 'bio': forms.TextInput(attrs={'placeholder': '\u0431\u0438\u043e', \"title\": \"\u0431\u0438\u043e\"}), # }","title":"\u0424\u043e\u0440\u043c\u044b"},{"location":"lab3/forms/#_1","text":"\u0424\u043e\u0440\u043c\u044b \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0434\u0430\u043d\u043d\u044b\u0435, \u0432\u0432\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c. \u0418\u0437 \u043d\u0438\u0445 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0444\u043e\u0440\u043c\u044b \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 frontend-\u0430. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 forms.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: # *** \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u0444\u043e\u0440\u043c \u043f\u043e \u043b\u0430\u0431\u0435 3 \u0432 \u0444\u0430\u0439\u043b\u0435 forms.py \u043d\u0435\u0442 *** # from django.forms import ModelForm # from django.contrib.auth.forms import UserCreationForm # from .models import Job, User # from django import forms # class MyUserCreationForm(UserCreationForm): # class Meta: # model = User # fields = ['name', 'username', 'email', 'password1', 'password2'] # pass # class JobForm(ModelForm): # class Meta: # model = Job # fields = ['name', 'description', 'topic', 'cost'] # exclude = [] # widgets = { # 'cost' : forms.TextInput(attrs = {'placeholder': '1000 \u0440\u0443\u0431'}), # } # class UserForm(ModelForm): # class Meta: # model = User # fields = ['avatar', 'name', 'username', 'email', 'bio'] # widgets = { # 'avatar': forms.TextInput(attrs={'placeholder': '\u0430\u0432\u0430\u0442\u0430\u0440', \"title\": \"\u0430\u0432\u0430\u0442\u0430\u0440\"}), # 'name': forms.TextInput(attrs={'placeholder': '\u0438\u043c\u044f', \"title\": \"\u0438\u043c\u044f\"}), # 'username': forms.TextInput(attrs={'placeholder': '\u043b\u043e\u0433\u0438\u043d', \"title\": \"\u043b\u043e\u0433\u0438\u043d\"}), # 'bio': forms.TextInput(attrs={'placeholder': '\u0431\u0438\u043e', \"title\": \"\u0431\u0438\u043e\"}), # }","title":"\u0424\u043e\u0440\u043c\u044b"},{"location":"lab3/models/","text":"\u041c\u043e\u0434\u0435\u043b\u0438 \u041c\u043e\u0434\u0435\u043b\u0438 \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 models.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.db import models from django.contrib.auth.models import AbstractUser class User(AbstractUser): name = models.CharField(max_length=200, null=True) email = models.EmailField(unique=True, blank=True, null=True) bio = models.TextField(null=True) avatar = models.ImageField(null=True, default='avatar.svg') objects = CustomUserManager() USERNAME_FIELD = 'email' REQUIRED_FIELDS = ['username'] class BaseModel(models.Model): name = models.CharField(max_length=200) created = models.DateTimeField(auto_now_add=True) updated = models.DateTimeField(auto_now_add=True) creator = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) # TODO: automatic creator setting class Meta: ordering = ['-updated', '-created'] def __str__(self): return self.name class File(BaseModel): file_field = models.FileField(upload_to=\"users-files\") class ProjectTopic(BaseModel): description = models.TextField(null=True) class Project(BaseModel): description = models.TextField(null=True) start_date = models.DateTimeField(null=True) end_date = models.DateTimeField(null=True) topics = models.ManyToManyField('ProjectTopic', verbose_name='\u0422\u0435\u043c\u044b', related_name='project_topics') class GradeReport(BaseModel): projects = models.ManyToManyField('Project', verbose_name='\u041f\u0440\u043e\u0435\u043a\u0442\u044b', related_name='gradereport_projects') class ProjectOfUser(BaseModel): project_field = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True) user_field = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class Teacher(BaseModel): user_field = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class Student(BaseModel): user_field = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class Grade(BaseModel): student_field = models.ForeignKey(Student, on_delete=models.SET_NULL, null=True) project_field = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True) grade_field = models.SmallIntegerField() class ProjectMeeting(BaseModel): project_field = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True) class Meeting(BaseModel): users_one_field = models.ManyToManyField('User', verbose_name='\u041b\u044e\u0434\u0438', related_name='meeting_users')","title":"Models"},{"location":"lab3/models/#_1","text":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0432 Django \u2014 \u044d\u0442\u043e \u043a\u043b\u0430\u0441\u0441\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0442 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445. \u041e\u043d\u0438 \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 models.py \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: from django.db import models from django.contrib.auth.models import AbstractUser class User(AbstractUser): name = models.CharField(max_length=200, null=True) email = models.EmailField(unique=True, blank=True, null=True) bio = models.TextField(null=True) avatar = models.ImageField(null=True, default='avatar.svg') objects = CustomUserManager() USERNAME_FIELD = 'email' REQUIRED_FIELDS = ['username'] class BaseModel(models.Model): name = models.CharField(max_length=200) created = models.DateTimeField(auto_now_add=True) updated = models.DateTimeField(auto_now_add=True) creator = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) # TODO: automatic creator setting class Meta: ordering = ['-updated', '-created'] def __str__(self): return self.name class File(BaseModel): file_field = models.FileField(upload_to=\"users-files\") class ProjectTopic(BaseModel): description = models.TextField(null=True) class Project(BaseModel): description = models.TextField(null=True) start_date = models.DateTimeField(null=True) end_date = models.DateTimeField(null=True) topics = models.ManyToManyField('ProjectTopic', verbose_name='\u0422\u0435\u043c\u044b', related_name='project_topics') class GradeReport(BaseModel): projects = models.ManyToManyField('Project', verbose_name='\u041f\u0440\u043e\u0435\u043a\u0442\u044b', related_name='gradereport_projects') class ProjectOfUser(BaseModel): project_field = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True) user_field = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class Teacher(BaseModel): user_field = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class Student(BaseModel): user_field = models.ForeignKey(User, on_delete=models.SET_NULL, null=True) class Grade(BaseModel): student_field = models.ForeignKey(Student, on_delete=models.SET_NULL, null=True) project_field = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True) grade_field = models.SmallIntegerField() class ProjectMeeting(BaseModel): project_field = models.ForeignKey(Project, on_delete=models.SET_NULL, null=True) class Meeting(BaseModel): users_one_field = models.ManyToManyField('User', verbose_name='\u041b\u044e\u0434\u0438', related_name='meeting_users')","title":"\u041c\u043e\u0434\u0435\u043b\u0438"},{"location":"lab3/task/","text":"\u041f\u043e\u0440\u0442\u0430\u043b \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0438 sqlite3, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c: \u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0435\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c \u0438 \u0435\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0441\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u043e\u043f\u044b\u0442 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0432\u044b\u0431\u043e\u0440 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u0421\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u0434\u043e\u043b\u0436\u0435\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0438 \u0435\u0433\u043e \u043e\u0442\u043c\u0435\u043d\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c \u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0438\u0445 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443, \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 (\u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043f\u043e\u0440\u0442\u0430\u043b\u0435) \u0437\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0438\u043c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab3/task/#_1","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0438 sqlite3, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c: \u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0435\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c \u0438 \u0435\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0441\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u043e\u043f\u044b\u0442 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0432\u044b\u0431\u043e\u0440 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u0421\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u0434\u043e\u043b\u0436\u0435\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0438 \u0435\u0433\u043e \u043e\u0442\u043c\u0435\u043d\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c \u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0438\u0445 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443, \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 (\u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043f\u043e\u0440\u0442\u0430\u043b\u0435) \u0437\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0438\u043c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438","title":"\u041f\u043e\u0440\u0442\u0430\u043b \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432"},{"location":"lab3/views/","text":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 Django \u2014\u044d\u0442\u043e \u0442\u043e, \u0447\u0442\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0435 MVC \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438. \u042d\u0442\u043e \u043c\u0435\u0441\u0442\u043e, \u0433\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432. \u041e\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 views.py. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: # *** \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441 rest api *** from projects.models import File, ProjectTopic, Project, GradeReport, \\ ProjectOfUser, Teacher, Student, Grade, ProjectMeeting, Meeting from projects.serializers import * from rest_framework import generics, permissions class IsOwnerOrReadOnly(permissions.BasePermission): def has_object_permission(self, request, view, obj): # \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043d\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. if request.method in permissions.SAFE_METHODS: return True # \u0420\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, GET) \u0437\u0430\u043f\u0440\u043e\u0441\u044b. return obj.owner == request.user # \u0417\u0434\u0435\u0441\u044c obj.owner - \u044d\u0442\u043e \u043f\u043e\u043b\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. # File class FileListAPIView(generics.ListAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class FileDestroyAPIView(generics.DestroyAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class FileUpdateAPIView(generics.UpdateAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class FileCreateAPIView(generics.CreateAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] # ProjectTopic class ProjectTopicListAPIView(generics.ListAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAuthenticated] class ProjectTopicDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectTopicUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectTopicCreateAPIView(generics.CreateAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAdminUser] # TODO # Project class ProjectListAPIView(generics.ListAPIView): serializer_class = ProjectSerializer # ProjectDepthSerializer TODO: queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectSerializer queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectSerializer queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectCreateAPIView(generics.CreateAPIView): serializer_class = ProjectSerializer queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] # GradeReport class GradeReportListAPIView(generics.ListAPIView): serializer_class = GradeReportSerializer # TODO: GradeReportDepthSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] class GradeReportDestroyAPIView(generics.DestroyAPIView): serializer_class = GradeReportSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] class GradeReportUpdateAPIView(generics.UpdateAPIView): serializer_class = GradeReportSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] class GradeReportCreateAPIView(generics.CreateAPIView): serializer_class = GradeReportSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] # ProjectOfUser class ProjectOfUserListAPIView(generics.ListAPIView): serializer_class = ProjectOfUserSerializer # TODO: ProjectOfUserDepthSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectOfUserDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectOfUserSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectOfUserUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectOfUserSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectOfUserCreateAPIView(generics.CreateAPIView): serializer_class = ProjectOfUserSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] # Teacher class TeacherListAPIView(generics.ListAPIView): serializer_class = TeacherSerializer # TODO: TeacherDepthSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAuthenticated] class TeacherDestroyAPIView(generics.DestroyAPIView): serializer_class = TeacherSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAdminUser] class TeacherUpdateAPIView(generics.UpdateAPIView): serializer_class = TeacherSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAdminUser] class TeacherCreateAPIView(generics.CreateAPIView): serializer_class = TeacherSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAdminUser] # Student class StudentListAPIView(generics.ListAPIView): serializer_class = StudentSerializer # TODO: StudentDepthSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAuthenticated] class StudentDestroyAPIView(generics.DestroyAPIView): serializer_class = StudentSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAdminUser] class StudentUpdateAPIView(generics.UpdateAPIView): serializer_class = StudentSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAdminUser] class StudentCreateAPIView(generics.CreateAPIView): serializer_class = StudentSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAdminUser] # Grade class GradeListAPIView(generics.ListAPIView): serializer_class = GradeSerializer # TODO: GradeDepthSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class GradeDestroyAPIView(generics.DestroyAPIView): serializer_class = GradeSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class GradeUpdateAPIView(generics.UpdateAPIView): serializer_class = GradeSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class GradeCreateAPIView(generics.CreateAPIView): serializer_class = GradeSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] # ProjectMeeting class ProjectMeetingListAPIView(generics.ListAPIView): serializer_class = ProjectMeetingSerializer # TODO: ProjectMeetingDepthSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class ProjectMeetingDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectMeetingSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class ProjectMeetingUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectMeetingSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class ProjectMeetingCreateAPIView(generics.CreateAPIView): serializer_class = ProjectMeetingSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] # Meeting class MeetingListAPIView(generics.ListAPIView): serializer_class = MeetingSerializer # TODO: MeetingDepthSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class MeetingDestroyAPIView(generics.DestroyAPIView): serializer_class = MeetingSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class MeetingUpdateAPIView(generics.UpdateAPIView): serializer_class = MeetingSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class MeetingCreateAPIView(generics.CreateAPIView): serializer_class = MeetingSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly]","title":"Views"},{"location":"lab3/views/#_1","text":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 Django \u2014\u044d\u0442\u043e \u0442\u043e, \u0447\u0442\u043e \u0432 \u043a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u043e\u043c \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0435 MVC \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438. \u042d\u0442\u043e \u043c\u0435\u0441\u0442\u043e, \u0433\u0434\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u043e\u0432. \u041e\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0444\u0430\u0439\u043b\u0435 views.py. \u0412 \u0440\u0430\u043c\u043a\u0430\u0445 \u0434\u0430\u043d\u043d\u043e\u0439 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u044d\u0442\u043e\u0433\u043e \u0444\u0430\u0439\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f: # *** \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441 rest api *** from projects.models import File, ProjectTopic, Project, GradeReport, \\ ProjectOfUser, Teacher, Student, Grade, ProjectMeeting, Meeting from projects.serializers import * from rest_framework import generics, permissions class IsOwnerOrReadOnly(permissions.BasePermission): def has_object_permission(self, request, view, obj): # \u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u043b\u044f \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043d\u0430 \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435. if request.method in permissions.SAFE_METHODS: return True # \u0420\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, GET) \u0437\u0430\u043f\u0440\u043e\u0441\u044b. return obj.owner == request.user # \u0417\u0434\u0435\u0441\u044c obj.owner - \u044d\u0442\u043e \u043f\u043e\u043b\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043e\u0431\u044a\u0435\u043a\u0442\u0430. # File class FileListAPIView(generics.ListAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class FileDestroyAPIView(generics.DestroyAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class FileUpdateAPIView(generics.UpdateAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class FileCreateAPIView(generics.CreateAPIView): serializer_class = FileSerializer queryset = File.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] # ProjectTopic class ProjectTopicListAPIView(generics.ListAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAuthenticated] class ProjectTopicDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectTopicUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectTopicCreateAPIView(generics.CreateAPIView): serializer_class = ProjectTopicSerializer queryset = ProjectTopic.objects.all() permission_classes = [permissions.IsAdminUser] # TODO # Project class ProjectListAPIView(generics.ListAPIView): serializer_class = ProjectSerializer # ProjectDepthSerializer TODO: queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectSerializer queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectSerializer queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectCreateAPIView(generics.CreateAPIView): serializer_class = ProjectSerializer queryset = Project.objects.all() permission_classes = [permissions.IsAdminUser] # GradeReport class GradeReportListAPIView(generics.ListAPIView): serializer_class = GradeReportSerializer # TODO: GradeReportDepthSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] class GradeReportDestroyAPIView(generics.DestroyAPIView): serializer_class = GradeReportSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] class GradeReportUpdateAPIView(generics.UpdateAPIView): serializer_class = GradeReportSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] class GradeReportCreateAPIView(generics.CreateAPIView): serializer_class = GradeReportSerializer queryset = GradeReport.objects.all() permission_classes = [permissions.IsAdminUser] # ProjectOfUser class ProjectOfUserListAPIView(generics.ListAPIView): serializer_class = ProjectOfUserSerializer # TODO: ProjectOfUserDepthSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectOfUserDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectOfUserSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectOfUserUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectOfUserSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] class ProjectOfUserCreateAPIView(generics.CreateAPIView): serializer_class = ProjectOfUserSerializer queryset = ProjectOfUser.objects.all() permission_classes = [permissions.IsAdminUser] # Teacher class TeacherListAPIView(generics.ListAPIView): serializer_class = TeacherSerializer # TODO: TeacherDepthSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAuthenticated] class TeacherDestroyAPIView(generics.DestroyAPIView): serializer_class = TeacherSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAdminUser] class TeacherUpdateAPIView(generics.UpdateAPIView): serializer_class = TeacherSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAdminUser] class TeacherCreateAPIView(generics.CreateAPIView): serializer_class = TeacherSerializer queryset = Teacher.objects.all() permission_classes = [permissions.IsAdminUser] # Student class StudentListAPIView(generics.ListAPIView): serializer_class = StudentSerializer # TODO: StudentDepthSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAuthenticated] class StudentDestroyAPIView(generics.DestroyAPIView): serializer_class = StudentSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAdminUser] class StudentUpdateAPIView(generics.UpdateAPIView): serializer_class = StudentSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAdminUser] class StudentCreateAPIView(generics.CreateAPIView): serializer_class = StudentSerializer queryset = Student.objects.all() permission_classes = [permissions.IsAdminUser] # Grade class GradeListAPIView(generics.ListAPIView): serializer_class = GradeSerializer # TODO: GradeDepthSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class GradeDestroyAPIView(generics.DestroyAPIView): serializer_class = GradeSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class GradeUpdateAPIView(generics.UpdateAPIView): serializer_class = GradeSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class GradeCreateAPIView(generics.CreateAPIView): serializer_class = GradeSerializer queryset = Grade.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] # ProjectMeeting class ProjectMeetingListAPIView(generics.ListAPIView): serializer_class = ProjectMeetingSerializer # TODO: ProjectMeetingDepthSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class ProjectMeetingDestroyAPIView(generics.DestroyAPIView): serializer_class = ProjectMeetingSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class ProjectMeetingUpdateAPIView(generics.UpdateAPIView): serializer_class = ProjectMeetingSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class ProjectMeetingCreateAPIView(generics.CreateAPIView): serializer_class = ProjectMeetingSerializer queryset = ProjectMeeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] # Meeting class MeetingListAPIView(generics.ListAPIView): serializer_class = MeetingSerializer # TODO: MeetingDepthSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class MeetingDestroyAPIView(generics.DestroyAPIView): serializer_class = MeetingSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class MeetingUpdateAPIView(generics.UpdateAPIView): serializer_class = MeetingSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly] class MeetingCreateAPIView(generics.CreateAPIView): serializer_class = MeetingSerializer queryset = Meeting.objects.all() permission_classes = [permissions.IsAdminUser, IsOwnerOrReadOnly]","title":"\u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f"},{"location":"lab4/task/","text":"\u041f\u043e\u0440\u0442\u0430\u043b \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0438 sqlite3, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c: \u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0435\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c \u0438 \u0435\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0441\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u043e\u043f\u044b\u0442 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0432\u044b\u0431\u043e\u0440 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u0421\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u0434\u043e\u043b\u0436\u0435\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0438 \u0435\u0433\u043e \u043e\u0442\u043c\u0435\u043d\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c \u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0438\u0445 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443, \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 (\u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043f\u043e\u0440\u0442\u0430\u043b\u0435) \u0437\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0438\u043c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab4/task/#_1","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0430\u0439\u0442, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a Django \u0438 sqlite3, \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c: \u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445: \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0435\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c \u0438 \u0435\u0433\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435, \u0441\u043e\u0441\u0442\u0430\u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u043e\u043f\u044b\u0442 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438 \u0432\u044b\u0431\u043e\u0440 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432. \u0421\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u0434\u043e\u043b\u0436\u0435\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u0431\u043e\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0438 \u0435\u0433\u043e \u043e\u0442\u043c\u0435\u043d\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f\u043c \u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043e\u0442\u0437\u044b\u0432\u043e\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0442\u0435\u043a\u0441\u0442 \u043e\u0442\u0437\u044b\u0432\u0430. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0438\u0445 \u043f\u043e\u0438\u0441\u043a \u043f\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u043c \u0441\u043b\u043e\u0432\u0430\u043c. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443, \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u0430 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0432\u0441\u0435\u0433\u043e \u043f\u043e\u0440\u0442\u0444\u0435\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 (\u0432\u0441\u0435\u0445 \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u043d\u0430 \u043f\u043e\u0440\u0442\u0430\u043b\u0435) \u0437\u0430 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0438\u043c \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438","title":"\u041f\u043e\u0440\u0442\u0430\u043b \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u043d\u043e\u0439 \u0434\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432"}]}